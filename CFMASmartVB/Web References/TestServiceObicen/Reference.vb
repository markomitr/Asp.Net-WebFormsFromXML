'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18408
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
'
Namespace TestServiceObicen
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private VerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPDFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PreglTarifiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KarticaArtikalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MesecIzvRealOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AnalNarackiOperationCompleted As System.Threading.SendOrPostCallback
        
        Private KartIOSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CFMASmartVB.My.MySettings.Default.CFMASmartVB_TestServiceObicen_Service1
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event VerCompleted As VerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPDFCompleted As GetPDFCompletedEventHandler
        
        '''<remarks/>
        Public Event PreglTarifiCompleted As PreglTarifiCompletedEventHandler
        
        '''<remarks/>
        Public Event KarticaArtikalCompleted As KarticaArtikalCompletedEventHandler
        
        '''<remarks/>
        Public Event MesecIzvRealCompleted As MesecIzvRealCompletedEventHandler
        
        '''<remarks/>
        Public Event AnalNarackiCompleted As AnalNarackiCompletedEventHandler
        
        '''<remarks/>
        Public Event KartIOSCompleted As KartIOSCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ver", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ver() As String
            Dim results() As Object = Me.Invoke("Ver", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub VerAsync()
            Me.VerAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub VerAsync(ByVal userState As Object)
            If (Me.VerOperationCompleted Is Nothing) Then
                Me.VerOperationCompleted = AddressOf Me.OnVerOperationCompleted
            End If
            Me.InvokeAsync("Ver", New Object(-1) {}, Me.VerOperationCompleted, userState)
        End Sub
        
        Private Sub OnVerOperationCompleted(ByVal arg As Object)
            If (Not (Me.VerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent VerCompleted(Me, New VerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPDF", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPDF(ByVal Pateka As String, ByRef Poraka As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GetPDF", New Object() {Pateka, Poraka})
            Poraka = CType(results(1),String)
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPDFAsync(ByVal Pateka As String, ByVal Poraka As String)
            Me.GetPDFAsync(Pateka, Poraka, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPDFAsync(ByVal Pateka As String, ByVal Poraka As String, ByVal userState As Object)
            If (Me.GetPDFOperationCompleted Is Nothing) Then
                Me.GetPDFOperationCompleted = AddressOf Me.OnGetPDFOperationCompleted
            End If
            Me.InvokeAsync("GetPDF", New Object() {Pateka, Poraka}, Me.GetPDFOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPDFOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPDFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPDFCompleted(Me, New GetPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PreglTarifi", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PreglTarifi(ByRef PDFPath As String, ByRef Poraka As String) As Boolean
            Dim results() As Object = Me.Invoke("PreglTarifi", New Object() {PDFPath, Poraka})
            PDFPath = CType(results(1),String)
            Poraka = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PreglTarifiAsync(ByVal PDFPath As String, ByVal Poraka As String)
            Me.PreglTarifiAsync(PDFPath, Poraka, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PreglTarifiAsync(ByVal PDFPath As String, ByVal Poraka As String, ByVal userState As Object)
            If (Me.PreglTarifiOperationCompleted Is Nothing) Then
                Me.PreglTarifiOperationCompleted = AddressOf Me.OnPreglTarifiOperationCompleted
            End If
            Me.InvokeAsync("PreglTarifi", New Object() {PDFPath, Poraka}, Me.PreglTarifiOperationCompleted, userState)
        End Sub
        
        Private Sub OnPreglTarifiOperationCompleted(ByVal arg As Object)
            If (Not (Me.PreglTarifiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PreglTarifiCompleted(Me, New PreglTarifiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KarticaArtikal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KarticaArtikal( _
                    ByVal reportName As String,  _
                    ByRef PDFPath As String,  _
                    ByVal SifArtikal As String,  _
                    ByVal SifOrgEd As String,  _
                    ByVal SoDDV As DaNe,  _
                    ByVal SoRazlCeni As DaNe,  _
                    ByVal DatDokOd As String,  _
                    ByVal DatDokDo As String,  _
                    ByVal DatNalOd As String,  _
                    ByVal DatNalDo As String,  _
                    ByVal Prodazna As DaNe,  _
                    ByVal RastOpagj As RastiOpagja,  _
                    ByVal KoiOE As String,  _
                    ByVal Komint As String,  _
                    ByVal PoMagCeni As DaNe,  _
                    ByVal wKomerc As String,  _
                    ByVal PrikKontrSer As DaNe,  _
                    ByVal KontrSer As String,  _
                    ByVal PrikVredn As DaNe,  _
                    ByVal PrikZbFakt As DaNe,  _
                    ByVal PrikAltKolic As DaNe,  _
                    ByVal PrikPren As DaNe,  _
                    ByRef Poraka As String) As Boolean
            Dim results() As Object = Me.Invoke("KarticaArtikal", New Object() {reportName, PDFPath, SifArtikal, SifOrgEd, SoDDV, SoRazlCeni, DatDokOd, DatDokDo, DatNalOd, DatNalDo, Prodazna, RastOpagj, KoiOE, Komint, PoMagCeni, wKomerc, PrikKontrSer, KontrSer, PrikVredn, PrikZbFakt, PrikAltKolic, PrikPren, Poraka})
            PDFPath = CType(results(1),String)
            Poraka = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub KarticaArtikalAsync( _
                    ByVal reportName As String,  _
                    ByVal PDFPath As String,  _
                    ByVal SifArtikal As String,  _
                    ByVal SifOrgEd As String,  _
                    ByVal SoDDV As DaNe,  _
                    ByVal SoRazlCeni As DaNe,  _
                    ByVal DatDokOd As String,  _
                    ByVal DatDokDo As String,  _
                    ByVal DatNalOd As String,  _
                    ByVal DatNalDo As String,  _
                    ByVal Prodazna As DaNe,  _
                    ByVal RastOpagj As RastiOpagja,  _
                    ByVal KoiOE As String,  _
                    ByVal Komint As String,  _
                    ByVal PoMagCeni As DaNe,  _
                    ByVal wKomerc As String,  _
                    ByVal PrikKontrSer As DaNe,  _
                    ByVal KontrSer As String,  _
                    ByVal PrikVredn As DaNe,  _
                    ByVal PrikZbFakt As DaNe,  _
                    ByVal PrikAltKolic As DaNe,  _
                    ByVal PrikPren As DaNe,  _
                    ByVal Poraka As String)
            Me.KarticaArtikalAsync(reportName, PDFPath, SifArtikal, SifOrgEd, SoDDV, SoRazlCeni, DatDokOd, DatDokDo, DatNalOd, DatNalDo, Prodazna, RastOpagj, KoiOE, Komint, PoMagCeni, wKomerc, PrikKontrSer, KontrSer, PrikVredn, PrikZbFakt, PrikAltKolic, PrikPren, Poraka, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KarticaArtikalAsync( _
                    ByVal reportName As String,  _
                    ByVal PDFPath As String,  _
                    ByVal SifArtikal As String,  _
                    ByVal SifOrgEd As String,  _
                    ByVal SoDDV As DaNe,  _
                    ByVal SoRazlCeni As DaNe,  _
                    ByVal DatDokOd As String,  _
                    ByVal DatDokDo As String,  _
                    ByVal DatNalOd As String,  _
                    ByVal DatNalDo As String,  _
                    ByVal Prodazna As DaNe,  _
                    ByVal RastOpagj As RastiOpagja,  _
                    ByVal KoiOE As String,  _
                    ByVal Komint As String,  _
                    ByVal PoMagCeni As DaNe,  _
                    ByVal wKomerc As String,  _
                    ByVal PrikKontrSer As DaNe,  _
                    ByVal KontrSer As String,  _
                    ByVal PrikVredn As DaNe,  _
                    ByVal PrikZbFakt As DaNe,  _
                    ByVal PrikAltKolic As DaNe,  _
                    ByVal PrikPren As DaNe,  _
                    ByVal Poraka As String,  _
                    ByVal userState As Object)
            If (Me.KarticaArtikalOperationCompleted Is Nothing) Then
                Me.KarticaArtikalOperationCompleted = AddressOf Me.OnKarticaArtikalOperationCompleted
            End If
            Me.InvokeAsync("KarticaArtikal", New Object() {reportName, PDFPath, SifArtikal, SifOrgEd, SoDDV, SoRazlCeni, DatDokOd, DatDokDo, DatNalOd, DatNalDo, Prodazna, RastOpagj, KoiOE, Komint, PoMagCeni, wKomerc, PrikKontrSer, KontrSer, PrikVredn, PrikZbFakt, PrikAltKolic, PrikPren, Poraka}, Me.KarticaArtikalOperationCompleted, userState)
        End Sub
        
        Private Sub OnKarticaArtikalOperationCompleted(ByVal arg As Object)
            If (Not (Me.KarticaArtikalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KarticaArtikalCompleted(Me, New KarticaArtikalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MesecIzvReal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function MesecIzvReal(ByRef PDFPath As String, ByVal DatOd As String, ByVal DatDo As String, ByVal GrPat As String, ByVal KojIzv As String, ByVal GrpBy As String, ByVal Kurs_EUR As String, ByVal Dev As String, ByVal Pat As String, ByVal TipDokProd As String, ByVal PrikStavki As DaNe, ByVal PrikVredn As DaNe, ByVal PoUpl As DaNe, ByRef Poraka As String) As Boolean
            Dim results() As Object = Me.Invoke("MesecIzvReal", New Object() {PDFPath, DatOd, DatDo, GrPat, KojIzv, GrpBy, Kurs_EUR, Dev, Pat, TipDokProd, PrikStavki, PrikVredn, PoUpl, Poraka})
            PDFPath = CType(results(1),String)
            Poraka = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub MesecIzvRealAsync(ByVal PDFPath As String, ByVal DatOd As String, ByVal DatDo As String, ByVal GrPat As String, ByVal KojIzv As String, ByVal GrpBy As String, ByVal Kurs_EUR As String, ByVal Dev As String, ByVal Pat As String, ByVal TipDokProd As String, ByVal PrikStavki As DaNe, ByVal PrikVredn As DaNe, ByVal PoUpl As DaNe, ByVal Poraka As String)
            Me.MesecIzvRealAsync(PDFPath, DatOd, DatDo, GrPat, KojIzv, GrpBy, Kurs_EUR, Dev, Pat, TipDokProd, PrikStavki, PrikVredn, PoUpl, Poraka, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub MesecIzvRealAsync(ByVal PDFPath As String, ByVal DatOd As String, ByVal DatDo As String, ByVal GrPat As String, ByVal KojIzv As String, ByVal GrpBy As String, ByVal Kurs_EUR As String, ByVal Dev As String, ByVal Pat As String, ByVal TipDokProd As String, ByVal PrikStavki As DaNe, ByVal PrikVredn As DaNe, ByVal PoUpl As DaNe, ByVal Poraka As String, ByVal userState As Object)
            If (Me.MesecIzvRealOperationCompleted Is Nothing) Then
                Me.MesecIzvRealOperationCompleted = AddressOf Me.OnMesecIzvRealOperationCompleted
            End If
            Me.InvokeAsync("MesecIzvReal", New Object() {PDFPath, DatOd, DatDo, GrPat, KojIzv, GrpBy, Kurs_EUR, Dev, Pat, TipDokProd, PrikStavki, PrikVredn, PoUpl, Poraka}, Me.MesecIzvRealOperationCompleted, userState)
        End Sub
        
        Private Sub OnMesecIzvRealOperationCompleted(ByVal arg As Object)
            If (Not (Me.MesecIzvRealCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MesecIzvRealCompleted(Me, New MesecIzvRealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AnalNaracki", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AnalNaracki( _
                    ByRef PDFPath As String,  _
                    ByVal TipNar As String,  _
                    ByVal OrgEd As String,  _
                    ByVal BrNarOd As String,  _
                    ByVal BrNarDo As String,  _
                    ByVal DatNarOd As String,  _
                    ByVal DatNarDo As String,  _
                    ByVal Komint As String,  _
                    ByVal VI As VlezIzlez,  _
                    ByVal KoiOE As String,  _
                    ByVal KojaGOrgEd As String,  _
                    ByVal KojAnal As KakovReport,  _
                    ByVal Danok As DaNe,  _
                    ByVal Pat As String,  _
                    ByVal Lokacija As String,  _
                    ByVal wSostojba As Sostojba,  _
                    ByVal ArtOd As String,  _
                    ByVal ArtDo As String,  _
                    ByVal Gr As String,  _
                    ByVal Podg As String,  _
                    ByVal MU As MaterUsl,  _
                    ByVal KojRep As KakovReport,  _
                    ByVal KoiRegioni As String,  _
                    ByVal KoiGradovi As String,  _
                    ByVal PodrPoReg As DaNe,  _
                    ByVal SifObj As String,  _
                    ByVal PrikPoEdMera As DaNe,  _
                    ByVal Podr As Podreduvanje,  _
                    ByVal DatDospOd As String,  _
                    ByVal DatDospDo As String,  _
                    ByVal GrPat As String,  _
                    ByVal Drugo1 As String,  _
                    ByVal Drugo2 As String,  _
                    ByVal Drugo3 As String,  _
                    ByVal Drugo4 As String,  _
                    ByVal Drugo5 As String,  _
                    ByVal Drugo6 As String,  _
                    ByVal Drugo7 As String,  _
                    ByVal Kto As String,  _
                    ByVal DatVreVnesOd As String,  _
                    ByVal DatVreVnesDo As String,  _
                    ByVal PoLok As DaNe,  _
                    ByVal LimitPoDiv As DaNe,  _
                    ByVal KojLimit As String,  _
                    ByVal wSostIspor As Sostojba,  _
                    ByVal DatIspOd As String,  _
                    ByVal DatIspDo As String,  _
                    ByVal PrikTekZal As DaNe,  _
                    ByVal GrOrgTekZal As String,  _
                    ByVal GrpBy As GrupirajPo,  _
                    ByRef Poraka As String) As Boolean
            Dim results() As Object = Me.Invoke("AnalNaracki", New Object() {PDFPath, TipNar, OrgEd, BrNarOd, BrNarDo, DatNarOd, DatNarDo, Komint, VI, KoiOE, KojaGOrgEd, KojAnal, Danok, Pat, Lokacija, wSostojba, ArtOd, ArtDo, Gr, Podg, MU, KojRep, KoiRegioni, KoiGradovi, PodrPoReg, SifObj, PrikPoEdMera, Podr, DatDospOd, DatDospDo, GrPat, Drugo1, Drugo2, Drugo3, Drugo4, Drugo5, Drugo6, Drugo7, Kto, DatVreVnesOd, DatVreVnesDo, PoLok, LimitPoDiv, KojLimit, wSostIspor, DatIspOd, DatIspDo, PrikTekZal, GrOrgTekZal, GrpBy, Poraka})
            PDFPath = CType(results(1),String)
            Poraka = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AnalNarackiAsync( _
                    ByVal PDFPath As String,  _
                    ByVal TipNar As String,  _
                    ByVal OrgEd As String,  _
                    ByVal BrNarOd As String,  _
                    ByVal BrNarDo As String,  _
                    ByVal DatNarOd As String,  _
                    ByVal DatNarDo As String,  _
                    ByVal Komint As String,  _
                    ByVal VI As VlezIzlez,  _
                    ByVal KoiOE As String,  _
                    ByVal KojaGOrgEd As String,  _
                    ByVal KojAnal As KakovReport,  _
                    ByVal Danok As DaNe,  _
                    ByVal Pat As String,  _
                    ByVal Lokacija As String,  _
                    ByVal wSostojba As Sostojba,  _
                    ByVal ArtOd As String,  _
                    ByVal ArtDo As String,  _
                    ByVal Gr As String,  _
                    ByVal Podg As String,  _
                    ByVal MU As MaterUsl,  _
                    ByVal KojRep As KakovReport,  _
                    ByVal KoiRegioni As String,  _
                    ByVal KoiGradovi As String,  _
                    ByVal PodrPoReg As DaNe,  _
                    ByVal SifObj As String,  _
                    ByVal PrikPoEdMera As DaNe,  _
                    ByVal Podr As Podreduvanje,  _
                    ByVal DatDospOd As String,  _
                    ByVal DatDospDo As String,  _
                    ByVal GrPat As String,  _
                    ByVal Drugo1 As String,  _
                    ByVal Drugo2 As String,  _
                    ByVal Drugo3 As String,  _
                    ByVal Drugo4 As String,  _
                    ByVal Drugo5 As String,  _
                    ByVal Drugo6 As String,  _
                    ByVal Drugo7 As String,  _
                    ByVal Kto As String,  _
                    ByVal DatVreVnesOd As String,  _
                    ByVal DatVreVnesDo As String,  _
                    ByVal PoLok As DaNe,  _
                    ByVal LimitPoDiv As DaNe,  _
                    ByVal KojLimit As String,  _
                    ByVal wSostIspor As Sostojba,  _
                    ByVal DatIspOd As String,  _
                    ByVal DatIspDo As String,  _
                    ByVal PrikTekZal As DaNe,  _
                    ByVal GrOrgTekZal As String,  _
                    ByVal GrpBy As GrupirajPo,  _
                    ByVal Poraka As String)
            Me.AnalNarackiAsync(PDFPath, TipNar, OrgEd, BrNarOd, BrNarDo, DatNarOd, DatNarDo, Komint, VI, KoiOE, KojaGOrgEd, KojAnal, Danok, Pat, Lokacija, wSostojba, ArtOd, ArtDo, Gr, Podg, MU, KojRep, KoiRegioni, KoiGradovi, PodrPoReg, SifObj, PrikPoEdMera, Podr, DatDospOd, DatDospDo, GrPat, Drugo1, Drugo2, Drugo3, Drugo4, Drugo5, Drugo6, Drugo7, Kto, DatVreVnesOd, DatVreVnesDo, PoLok, LimitPoDiv, KojLimit, wSostIspor, DatIspOd, DatIspDo, PrikTekZal, GrOrgTekZal, GrpBy, Poraka, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AnalNarackiAsync( _
                    ByVal PDFPath As String,  _
                    ByVal TipNar As String,  _
                    ByVal OrgEd As String,  _
                    ByVal BrNarOd As String,  _
                    ByVal BrNarDo As String,  _
                    ByVal DatNarOd As String,  _
                    ByVal DatNarDo As String,  _
                    ByVal Komint As String,  _
                    ByVal VI As VlezIzlez,  _
                    ByVal KoiOE As String,  _
                    ByVal KojaGOrgEd As String,  _
                    ByVal KojAnal As KakovReport,  _
                    ByVal Danok As DaNe,  _
                    ByVal Pat As String,  _
                    ByVal Lokacija As String,  _
                    ByVal wSostojba As Sostojba,  _
                    ByVal ArtOd As String,  _
                    ByVal ArtDo As String,  _
                    ByVal Gr As String,  _
                    ByVal Podg As String,  _
                    ByVal MU As MaterUsl,  _
                    ByVal KojRep As KakovReport,  _
                    ByVal KoiRegioni As String,  _
                    ByVal KoiGradovi As String,  _
                    ByVal PodrPoReg As DaNe,  _
                    ByVal SifObj As String,  _
                    ByVal PrikPoEdMera As DaNe,  _
                    ByVal Podr As Podreduvanje,  _
                    ByVal DatDospOd As String,  _
                    ByVal DatDospDo As String,  _
                    ByVal GrPat As String,  _
                    ByVal Drugo1 As String,  _
                    ByVal Drugo2 As String,  _
                    ByVal Drugo3 As String,  _
                    ByVal Drugo4 As String,  _
                    ByVal Drugo5 As String,  _
                    ByVal Drugo6 As String,  _
                    ByVal Drugo7 As String,  _
                    ByVal Kto As String,  _
                    ByVal DatVreVnesOd As String,  _
                    ByVal DatVreVnesDo As String,  _
                    ByVal PoLok As DaNe,  _
                    ByVal LimitPoDiv As DaNe,  _
                    ByVal KojLimit As String,  _
                    ByVal wSostIspor As Sostojba,  _
                    ByVal DatIspOd As String,  _
                    ByVal DatIspDo As String,  _
                    ByVal PrikTekZal As DaNe,  _
                    ByVal GrOrgTekZal As String,  _
                    ByVal GrpBy As GrupirajPo,  _
                    ByVal Poraka As String,  _
                    ByVal userState As Object)
            If (Me.AnalNarackiOperationCompleted Is Nothing) Then
                Me.AnalNarackiOperationCompleted = AddressOf Me.OnAnalNarackiOperationCompleted
            End If
            Me.InvokeAsync("AnalNaracki", New Object() {PDFPath, TipNar, OrgEd, BrNarOd, BrNarDo, DatNarOd, DatNarDo, Komint, VI, KoiOE, KojaGOrgEd, KojAnal, Danok, Pat, Lokacija, wSostojba, ArtOd, ArtDo, Gr, Podg, MU, KojRep, KoiRegioni, KoiGradovi, PodrPoReg, SifObj, PrikPoEdMera, Podr, DatDospOd, DatDospDo, GrPat, Drugo1, Drugo2, Drugo3, Drugo4, Drugo5, Drugo6, Drugo7, Kto, DatVreVnesOd, DatVreVnesDo, PoLok, LimitPoDiv, KojLimit, wSostIspor, DatIspOd, DatIspDo, PrikTekZal, GrOrgTekZal, GrpBy, Poraka}, Me.AnalNarackiOperationCompleted, userState)
        End Sub
        
        Private Sub OnAnalNarackiOperationCompleted(ByVal arg As Object)
            If (Not (Me.AnalNarackiCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AnalNarackiCompleted(Me, New AnalNarackiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KartIOS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function KartIOS( _
                    ByRef PDFPath As String,  _
                    ByVal SifKomint As String,  _
                    ByVal SifOrgEd As String,  _
                    ByVal Konto As String,  _
                    ByVal DaliIos As DaNe,  _
                    ByVal KupDob As KupuvacDobavuvac,  _
                    ByVal DatDokOd As String,  _
                    ByVal DatDokDo As String,  _
                    ByVal DatNalOd As String,  _
                    ByVal DatNalDo As String,  _
                    ByVal KakoZatv As DaNe,  _
                    ByVal GSifOrgEd As String,  _
                    ByVal PokojDat As Podreduvanje,  _
                    ByVal PoKonta As DaNe,  _
                    ByVal DatDospOd As String,  _
                    ByVal DatDospDo As String,  _
                    ByVal Prored As DaNe,  _
                    ByVal ImeParBaza As String,  _
                    ByVal PoFaktUpl As String,  _
                    ByVal Pat As String,  _
                    ByVal TipNal As String,  _
                    ByVal Divizija As String,  _
                    ByVal KoiPat As String,  _
                    ByVal PoDivizii As DaNe,  _
                    ByVal GrpPo As GrupirajPo,  _
                    ByVal PrikPrebPrethProm As DaNe,  _
                    ByVal IosNaDatum As String,  _
                    ByRef Poraka As String) As Boolean
            Dim results() As Object = Me.Invoke("KartIOS", New Object() {PDFPath, SifKomint, SifOrgEd, Konto, DaliIos, KupDob, DatDokOd, DatDokDo, DatNalOd, DatNalDo, KakoZatv, GSifOrgEd, PokojDat, PoKonta, DatDospOd, DatDospDo, Prored, ImeParBaza, PoFaktUpl, Pat, TipNal, Divizija, KoiPat, PoDivizii, GrpPo, PrikPrebPrethProm, IosNaDatum, Poraka})
            PDFPath = CType(results(1),String)
            Poraka = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub KartIOSAsync( _
                    ByVal PDFPath As String,  _
                    ByVal SifKomint As String,  _
                    ByVal SifOrgEd As String,  _
                    ByVal Konto As String,  _
                    ByVal DaliIos As DaNe,  _
                    ByVal KupDob As KupuvacDobavuvac,  _
                    ByVal DatDokOd As String,  _
                    ByVal DatDokDo As String,  _
                    ByVal DatNalOd As String,  _
                    ByVal DatNalDo As String,  _
                    ByVal KakoZatv As DaNe,  _
                    ByVal GSifOrgEd As String,  _
                    ByVal PokojDat As Podreduvanje,  _
                    ByVal PoKonta As DaNe,  _
                    ByVal DatDospOd As String,  _
                    ByVal DatDospDo As String,  _
                    ByVal Prored As DaNe,  _
                    ByVal ImeParBaza As String,  _
                    ByVal PoFaktUpl As String,  _
                    ByVal Pat As String,  _
                    ByVal TipNal As String,  _
                    ByVal Divizija As String,  _
                    ByVal KoiPat As String,  _
                    ByVal PoDivizii As DaNe,  _
                    ByVal GrpPo As GrupirajPo,  _
                    ByVal PrikPrebPrethProm As DaNe,  _
                    ByVal IosNaDatum As String,  _
                    ByVal Poraka As String)
            Me.KartIOSAsync(PDFPath, SifKomint, SifOrgEd, Konto, DaliIos, KupDob, DatDokOd, DatDokDo, DatNalOd, DatNalDo, KakoZatv, GSifOrgEd, PokojDat, PoKonta, DatDospOd, DatDospDo, Prored, ImeParBaza, PoFaktUpl, Pat, TipNal, Divizija, KoiPat, PoDivizii, GrpPo, PrikPrebPrethProm, IosNaDatum, Poraka, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub KartIOSAsync( _
                    ByVal PDFPath As String,  _
                    ByVal SifKomint As String,  _
                    ByVal SifOrgEd As String,  _
                    ByVal Konto As String,  _
                    ByVal DaliIos As DaNe,  _
                    ByVal KupDob As KupuvacDobavuvac,  _
                    ByVal DatDokOd As String,  _
                    ByVal DatDokDo As String,  _
                    ByVal DatNalOd As String,  _
                    ByVal DatNalDo As String,  _
                    ByVal KakoZatv As DaNe,  _
                    ByVal GSifOrgEd As String,  _
                    ByVal PokojDat As Podreduvanje,  _
                    ByVal PoKonta As DaNe,  _
                    ByVal DatDospOd As String,  _
                    ByVal DatDospDo As String,  _
                    ByVal Prored As DaNe,  _
                    ByVal ImeParBaza As String,  _
                    ByVal PoFaktUpl As String,  _
                    ByVal Pat As String,  _
                    ByVal TipNal As String,  _
                    ByVal Divizija As String,  _
                    ByVal KoiPat As String,  _
                    ByVal PoDivizii As DaNe,  _
                    ByVal GrpPo As GrupirajPo,  _
                    ByVal PrikPrebPrethProm As DaNe,  _
                    ByVal IosNaDatum As String,  _
                    ByVal Poraka As String,  _
                    ByVal userState As Object)
            If (Me.KartIOSOperationCompleted Is Nothing) Then
                Me.KartIOSOperationCompleted = AddressOf Me.OnKartIOSOperationCompleted
            End If
            Me.InvokeAsync("KartIOS", New Object() {PDFPath, SifKomint, SifOrgEd, Konto, DaliIos, KupDob, DatDokOd, DatDokDo, DatNalOd, DatNalDo, KakoZatv, GSifOrgEd, PokojDat, PoKonta, DatDospOd, DatDospDo, Prored, ImeParBaza, PoFaktUpl, Pat, TipNal, Divizija, KoiPat, PoDivizii, GrpPo, PrikPrebPrethProm, IosNaDatum, Poraka}, Me.KartIOSOperationCompleted, userState)
        End Sub
        
        Private Sub OnKartIOSOperationCompleted(ByVal arg As Object)
            If (Not (Me.KartIOSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent KartIOSCompleted(Me, New KartIOSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum DaNe
        
        '''<remarks/>
        Da
        
        '''<remarks/>
        Ne
        
        '''<remarks/>
        Nisto
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum RastiOpagja
        
        '''<remarks/>
        Rastecki
        
        '''<remarks/>
        Opagjacki
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum VlezIzlez
        
        '''<remarks/>
        Vlez
        
        '''<remarks/>
        Izlez
        
        '''<remarks/>
        Site
        
        '''<remarks/>
        Invest
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum KakovReport
        
        '''<remarks/>
        Detalen
        
        '''<remarks/>
        PoDen
        
        '''<remarks/>
        PoMesec
        
        '''<remarks/>
        PoKomintent
        
        '''<remarks/>
        PoGrad
        
        '''<remarks/>
        PoRegion
        
        '''<remarks/>
        PoDenIPoKomintent
        
        '''<remarks/>
        PoArtikl
        
        '''<remarks/>
        Zbiren
        
        '''<remarks/>
        ZbirPoDatum
        
        '''<remarks/>
        ZbirPoNalozi
        
        '''<remarks/>
        Standarden
        
        '''<remarks/>
        Skraten
        
        '''<remarks/>
        DinamickiGrupiran
        
        '''<remarks/>
        Dinamicki
        
        '''<remarks/>
        PoDokument
        
        '''<remarks/>
        Kontrolen
        
        '''<remarks/>
        PoNalog
        
        '''<remarks/>
        Devizen
        
        '''<remarks/>
        PoFakturi
        
        '''<remarks/>
        PoUplati
        
        '''<remarks/>
        PoOrgEd
        
        '''<remarks/>
        PoArtArt
        
        '''<remarks/>
        PoPodelba1
        
        '''<remarks/>
        PoPodelba2
        
        '''<remarks/>
        PoPodelba3
        
        '''<remarks/>
        PoPodelba4
        
        '''<remarks/>
        PoPodelba5
        
        '''<remarks/>
        PoPodelba6
        
        '''<remarks/>
        PoPodelba7
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum Sostojba
        
        '''<remarks/>
        Site
        
        '''<remarks/>
        Realizirani
        
        '''<remarks/>
        Nerealizirani
        
        '''<remarks/>
        Pozitivni
        
        '''<remarks/>
        Negativni
        
        '''<remarks/>
        RazlOdNula
        
        '''<remarks/>
        CelosnoNerealizirani
        
        '''<remarks/>
        Isporacani
        
        '''<remarks/>
        NeIsporacani
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum MaterUsl
        
        '''<remarks/>
        Materijali
        
        '''<remarks/>
        Uslugi
        
        '''<remarks/>
        Site
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum Podreduvanje
        
        '''<remarks/>
        Nema
        
        '''<remarks/>
        PoSifra
        
        '''<remarks/>
        PoIme
        
        '''<remarks/>
        PoGrupa
        
        '''<remarks/>
        PoPodgr
        
        '''<remarks/>
        PoLokacija
        
        '''<remarks/>
        PoKomintent
        
        '''<remarks/>
        PoDatum
        
        '''<remarks/>
        PoGrad
        
        '''<remarks/>
        PoRegion
        
        '''<remarks/>
        PoKasa
        
        '''<remarks/>
        PoKonto
        
        '''<remarks/>
        PoDatNal
        
        '''<remarks/>
        PoDatDok
        
        '''<remarks/>
        PoPatnik
        
        '''<remarks/>
        PoPrevoznik
        
        '''<remarks/>
        PoSpremac
        
        '''<remarks/>
        PoBrFra
        
        '''<remarks/>
        PoBrFraGrp
        
        '''<remarks/>
        PoBroj
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum GrupirajPo
        
        '''<remarks/>
        PoArtkl
        
        '''<remarks/>
        PoImeArtikl
        
        '''<remarks/>
        PoDokument
        
        '''<remarks/>
        PoDatum
        
        '''<remarks/>
        PoKonto
        
        '''<remarks/>
        PoTarifa
        
        '''<remarks/>
        PoKomint
        
        '''<remarks/>
        PoKasa
        
        '''<remarks/>
        PoBrand
        
        '''<remarks/>
        PoNisto
        
        '''<remarks/>
        PoGrupa
        
        '''<remarks/>
        PoPodgrupa
        
        '''<remarks/>
        PoLokacija
        
        '''<remarks/>
        PoDivizii
        
        '''<remarks/>
        PoZBrend
        
        '''<remarks/>
        PoKomintStavr
        
        '''<remarks/>
        PoCarinskiBroj
        
        '''<remarks/>
        PoGradovi
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum KupuvacDobavuvac
        
        '''<remarks/>
        Kupuvac
        
        '''<remarks/>
        Dobavuvac
        
        '''<remarks/>
        IKupIDob
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub VerCompletedEventHandler(ByVal sender As Object, ByVal e As VerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class VerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub GetPDFCompletedEventHandler(ByVal sender As Object, ByVal e As GetPDFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPDFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Poraka() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub PreglTarifiCompletedEventHandler(ByVal sender As Object, ByVal e As PreglTarifiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PreglTarifiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property PDFPath() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Poraka() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub KarticaArtikalCompletedEventHandler(ByVal sender As Object, ByVal e As KarticaArtikalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KarticaArtikalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property PDFPath() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Poraka() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub MesecIzvRealCompletedEventHandler(ByVal sender As Object, ByVal e As MesecIzvRealCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class MesecIzvRealCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property PDFPath() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Poraka() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub AnalNarackiCompletedEventHandler(ByVal sender As Object, ByVal e As AnalNarackiCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AnalNarackiCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property PDFPath() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Poraka() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub KartIOSCompletedEventHandler(ByVal sender As Object, ByVal e As KartIOSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class KartIOSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property PDFPath() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Poraka() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
End Namespace
